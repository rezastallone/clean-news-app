ext {

    androidXVersion = '1.0.2'
    espressoVersion = '3.2.0'
    hamcrestVersion = '1.3'
    archTestingVersion = '2.0.0'
    robolectricVersion = '4.3-beta-1'
    truthVersion = '0.44'
    testRulesVersion = '1.2.0-beta01'
    testFragmentVersion = '1.1.0-alpha07'
    androidxTestCoreVersion = '1.2.0'
    androidXAnnotationsVersion = '1.0.1'
    androidXLegacySupportVersion = '1.0.0'
    recyclerViewVersion = '1.0.0'
    appcompatVersion = '1.0.2'
    materialVersion = '1.0.0'
    daggerVersion = '2.23.2'

    testExtPackage = 'androidx.test.ext'
    espressoPackage = 'androidx.test.espresso'
    androidxTestPackage = 'androidx.test'
    robolectricPackage = 'org.robolectric'
    daggerPackage = 'com.google.dagger'
    rxjavaPackage = 'io.reactivex.rxjava2'

    androidxDependencies = [
            appCompat: buildDependency('androidx.appcompat', 'appcompat', androidXVersion)
    ]

    mainApplication = [
            retrofit       : buildDependency('com.squareup.retrofit2', 'retrofit', '2.6.0'),
            material       : buildDependency('com.google.android.material', 'material', '1.0.0'),
            constrainLayout: buildDependency('androidx.constraintlayout', 'constraintlayout', '1.1.3'),
            constrainLayout: buildDependency('androidx.constraintlayout', 'constraintlayout', '1.1.3'),
            dagger         : buildDependency(daggerPackage, 'dagger', daggerVersion),
            daggerCompiler : buildDependency(daggerPackage, 'dagger-compiler', daggerVersion),
            rxjava         : buildDependency(rxjavaPackage, 'rxjava', '2.2.10'),
            rxjavaAndroid  : buildDependency(rxjavaPackage, 'rxandroid', '2.1.1'),
    ]

    testingDependencies = [
            junitExt                : buildDependency(testExtPackage, 'junit', '1.0.0'),
            testRunner              : buildDependency(androidxTestPackage, 'runner', '1.1.0'),
            rules                   : buildDependency(androidxTestPackage, 'rules', testRulesVersion),
            core                    : buildDependency(androidxTestPackage, 'core', androidxTestCoreVersion),
            espresso                : buildDependency(espressoPackage, 'espresso-core', espressoVersion),
            espressoContrib         : buildDependency(espressoPackage, 'espresso-contrib', espressoVersion),
            espressoIntents         : buildDependency(espressoPackage, 'espresso-intents', espressoVersion),
            espressoIdlingResource  : buildDependency(espressoPackage, 'espresso-idling-resource', espressoVersion),
            espressoIdlingConcurrent: buildDependency('androidx.test.espresso.idling', 'idling-concurrent', espressoVersion),
            hamcrest                : buildDependency('org.hamcrest', 'hamcrest-all', hamcrestVersion),
            arch                    : buildDependency('androidx.arch.core', 'core-testing', archTestingVersion),
            robolectric             : buildDependency(robolectricPackage, 'robolectric', robolectricVersion),
            robolectricAnnotation   : buildDependency(robolectricPackage, 'annotations', robolectricVersion),
            truth                   : buildDependency('com.google.truth', 'truth', truthVersion),
            fragment                : buildDependency('androidx.fragment', 'fragment-testing', testFragmentVersion),
            testAnnotation          : buildDependency('androidx.annotation', 'annotation', androidXAnnotationsVersion),
            legacySupport           : buildDependency('androidx.legacy', 'legacy-support-v4', androidXLegacySupportVersion),
            recyclerview            : buildDependency('androidx.recyclerview', 'recyclerview', recyclerViewVersion),
            appCompat               : buildDependency('androidx.appcompat', 'appcompat', appcompatVersion),

    ]
}

static String buildDependency(String pack, String dependency, String version) {
    return "${pack}:${dependency}:${version}"
}
